6. 添加源文件
----------------

CMake 有多种添加源文件的方式，规定使用递归搜索的方式加载源文件。

6.1. 全递归加载
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

顾名思义，全递归加载即是将制定文件夹下所有文件和子文件下指定的文件类型全部搜索出来方式源码文件变量中进行编译

优点：

    #. 自动加载源码文件
    #. 不需要维护参与编译的文件列表

缺点：

    #. cmake 早起版本递归所搜可能会造成每次都会cmake 有缓存的情况可能又不会触发cmake

综合以上优缺点，我们规定使用全递归的方式加载源文件.

.. tip::

    当前工程有很多没有遵照此 **风格** 组织工程文件，会逐步进行重构

实例：

.. code-block:: cmake
    ###############################################################
    # CMake 设置
    ###############################################################
    # ...
 
    ###############################################################
    # 编译器设置
    ###############################################################
    # ...

    ###############################################################
    # 查找依赖库
    ###############################################################
    #...
 
    ###############################################################
    # 全递归搜索源码文件生成库或可执行程序及工程属性设置
    ###############################################################
    file(GLOB_RECURSE ALL_SOURCE_FILES include/*.h include/*.hpp src/*.h src/*.cpp src/*.cxx src/*.c)

    # VS xcode等IDE的fileter支持
    source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR}
        FILES ${ALL_SOURCE_FILES}
    )

    add_library(${PROJECT_NAME} SHARED ${ALL_SOURCE_FILES})
    
    ###############################################################
    # 其他设置
    ###############################################################


6.2. 递归加载
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

略

6.3. 文件列表加载
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

略